#VRML V2.0 utf8


#Eng 477 Illustration: Co-planar Polygons
#K.-P. Beier, University of Michigan
#Lat Update: October 28, 2002


Viewpoint {description "Reset View" position 0 -0.9 10}

NavigationInfo {type ["EXAMINE" "ANY"]}

Background {skyColor [ 0.6 0.7 1.0 ]}


##################################################
# Begin of overlapping polygons

DEF OI OrientationInterpolator { 	# interpolator for polygon animation
   key [ 0.0  0.25  0.5  0.75  1.0 ]
   keyValue [1 1 1 -0.1, 1 1 1 0, 1 1 1 0.1, 1 1 1 0, 1 1 1 -0.1 ]
}

DEF POLY Transform { children [	# begin of animation Transform

# begin of green polygon
Shape {
  appearance Appearance {material Material {diffuseColor 0.13 .5 0.13}}
  geometry IndexedFaceSet {
    coord Coordinate {point [ 2 1 0, -2 1 0, -2 -1 0, 2 -1 0]}
    coordIndex [ 0, 1, 2, 3, -1 ]
    solid FALSE
  }
}
# end of green polygon


# begin of orange polygon switch
DEF SWITCH Switch {
   choice [
      Transform {		#orange polygon co-planar (choice 0)
         translation 0 0 0
         children DEF ORANGE Shape {
            appearance Appearance {material Material {diffuseColor 0.93 0.4 0}}
            geometry IndexedFaceSet {
               coord Coordinate {point [ 1 2 0, -1 2 0, -1 -2 0, 1 -2 0]}
               coordIndex [ 0, 1, 2, 3, -1]
               solid FALSE
            }
         }
      }
      Transform {		#orange polygon separated (choice 1)
         translation 0 0 0.05
         children USE ORANGE
      }
   ]
   whichChoice 0
}
# end of orange polygon switch

]}		# end of animation Transform

# End of overlapping polygons
##################################################


##################################################
# Begin of floating panel (control buttons)

# ProximitySensor to measure the viewer's position and orientation
DEF PANELPROX ProximitySensor {size 100 100 100}

# Transform to follow the viewer and make the panel appear to be static
DEF PANELTRANS Transform {

   children [

#####

      Transform {		# begin of left button
         translation -0.4 -1.4 -5
         children [
            DEF LEFTBUTTON TouchSensor { }
#
	      Shape { 	# left button sphere
               appearance Appearance {material Material {diffuseColor 1 0 0}}
	         geometry Sphere {radius 0.2}
	      }
#
            Transform { 		# left button text
               translation -0.3 -0.1 0 
		   children [
                  Shape {
                     geometry Text {
                        string ["co-planar"]
                        fontStyle FontStyle {
                           style "BOLD"
                           size 0.35
                           justify "END"
                        }
                     }
                     appearance Appearance {material Material {diffuseColor 0 0 0}}
                  }
               ]
            }
#
            DEF LS Switch {		# left button on-indicator
               choice [
                  Shape {geometry Box {size 0.5 0.5 0.01}}
         	   ]
         	   whichChoice 0
            }
         ]
      }     		# end of left button

#####

      Transform {		# begin of right button
         translation 0.4 -1.4 -5
         children [
            DEF RIGHTBUTTON TouchSensor { }
#
            Shape {	 # right button sphere
               appearance Appearance {material Material {diffuseColor 1 0 1}}
               geometry Sphere {radius 0.2}
            }
#
            Transform { # right button text
               translation 0.3 -0.1 0 
               children [
                  Shape {
                     geometry Text {
                        string ["separated"]
                        fontStyle FontStyle {
                           style "BOLD"
                           size 0.35
                           justify "BEGIN"
                        }
                     }
			   appearance Appearance {material Material {diffuseColor 0 0 0}}
	   		}
		   ]
            }
#
            DEF RS Switch {	# right button on-indicator
               choice [
                  Shape {geometry Box {size 0.5 0.5 0.01}}
         	   ]
               whichChoice -1
            }
         ]
      }     		# end of right button

   ]

}

# End of floating panel (control buttons)
##################################################


##################################################
#VRML Script to set switch choices in response to button clicks

DEF SCR Script {
   eventIn SFTime switchTime1
   eventIn SFTime switchTime0
   eventOut SFInt32 choice
   eventOut SFInt32 leftchoice
   eventOut SFInt32 rightchoice

   url "vrmlscript:

      function switchTime1 (value,time) {
         choice = 1;
         leftchoice = 0;
         rightchoice = -1;
      }

      function switchTime0 (value,time) {
         choice = 0;
         leftchoice = -1;
         rightchoice = 0;
      }

   "
}

# End of VRML Script
##################################################


##################################################
# Routing statements and timers

# Routing for floating panel
ROUTE PANELPROX.position_changed TO PANELTRANS.set_translation
ROUTE PANELPROX.orientation_changed TO PANELTRANS.set_rotation

# Routing of button clicks (via script)
ROUTE RIGHTBUTTON.touchTime TO SCR.switchTime1
ROUTE LEFTBUTTON.touchTime  TO SCR.switchTime0
ROUTE SCR.choice TO SWITCH.whichChoice
ROUTE SCR.leftchoice TO RS.whichChoice
ROUTE SCR.rightchoice TO LS.whichChoice

# Timer and routing for polygon animation
DEF TS1 TimeSensor { loop TRUE cycleInterval 10.0 }
ROUTE OI.value_changed TO POLY.set_rotation
ROUTE TS1.fraction_changed TO OI.set_fraction

# End of routing and timers
##################################################