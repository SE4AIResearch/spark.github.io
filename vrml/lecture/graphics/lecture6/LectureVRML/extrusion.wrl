#VRML V2.0 utf8

#Eng 477 Illustration: Extrusion
#K.-P. Beier, University of Michigan
#Last Update: October 4, 2000 - Version 5

##################################################
# Begin Navigation, Background, Light

Viewpoint { description "Reset View" position 0 3 12 }

NavigationInfo {type ["EXAMINE" "ANY"]}

Background {skyColor [ 0.5 0.6 1.0 ]}

PointLight { location 5 5 5 intensity 0.2 }

# End Navigation, Background, Light
##################################################


##################################################
# Begin of Prototype CrossSectionProto

PROTO CrossSectionProto [
      field SFVec3f    scl  1 1 1		# scale
      field SFRotation ori  0 1 0 0		# rotation
	field SFVec3f    pos  0 0 0		# translation
      field SFNode     linecol  Color {color [1 1 0]}	# line color
      field SFColor    ballcol  1 1 0	# sphere color
	field SFFloat    ballrad  0.07	# sphere radius
]{
Transform {
	scale IS scl
	rotation IS ori
	translation IS pos
	children [		# begin of section definition

		Shape {					# section path
			geometry IndexedLineSet {
				coord Coordinate {
					point [ 0.000 0 -1.000, -0.951 0 -0.309, -0.588 0  0.809,
				   		  0.588 0  0.809,  0.951 0 -0.309,  0.000 0 -1.000 ]
				}
				coordIndex [0 1 2 3 4 5 ]
				colorPerVertex FALSE
				color IS linecol
			}
		}
		Transform {					# sphere at vertex 0
			children [
				DEF CVERTEX Shape {
					appearance Appearance {
						material Material {diffuseColor IS ballcol}
					}
					geometry Sphere {radius IS ballrad}
				}
			]
			translation  0.000 0 -1.000
		}
		Transform { children USE CVERTEX	# sphere at vertex 1
			translation  -0.951 0 -0.309
		}
		Transform { children USE CVERTEX	# sphere at vertex 2
			translation  -0.588 0  0.809
		}
		Transform { children USE CVERTEX	# sphere at vertex 3
			translation   0.588 0  0.809
		}
		Transform { children USE CVERTEX	# sphere at vertex 4
			translation   0.951 0 -0.309
		}

	]			# end of section definition
}}

# End of Prototype CrossSectionProto
##################################################


##################################################
# Begin of Prototype SpineProto

PROTO SpineProto [
]{
Transform {
	children [			# begin of spine definition
		Shape {						# spine path
			geometry IndexedLineSet {
				coord Coordinate {
					point [ -5.0   3.0   0.0, -4.0   3.0   0.0,
						  -1.1   3.0   0.0,  1.1   4.9   0.0,
						   4.0   4.9   0.0,  5.0   4.9   0.0 ]
				}
				coordIndex [0 1 2 3 4 5 ]
				colorPerVertex FALSE
				color Color {color [ 0.0 0.0 1.0 ]}
			}
		}
		Transform {						# sphere at spine vertex 0
			children [
				DEF SVERTEX Shape {
					appearance Appearance {
						material Material {diffuseColor 0 0 1}
					}
					geometry Sphere {radius 0.07}
				}
			]
			translation  -5.0   3.0   0.0
		}
		Transform { children USE SVERTEX		# sphere at spine vertex 1
			translation  -4.0   3.0   0.0
		}
		Transform { children USE SVERTEX		# sphere at spine vertex 2
			translation  -1.1   3.0   0.0
		}
		Transform { children USE SVERTEX		# sphere at spine vertex 3
			translation  1.1   4.9   0.0
		}
		Transform { children USE SVERTEX		# sphere at spine vertex 4
			translation  4.0   4.9   0.0
		}
		Transform { children USE SVERTEX		# sphere at spine vertex 5
			translation  5.0   4.9   0.0
		}
	]				# end of spine definition
}}

# End of Prototype SpineProto
##################################################


##################################################
# Begin of Prototype CapProto

PROTO CapProto [
	field SFVec3f    pos  0 0 0
      field SFNode     mat  Material {diffuseColor 1 0 0 transparency 0}
]{

Transform {
	rotation 0 0 1 1.57
	translation IS pos
	scale 1.5 1.0 1.5
	children [
		Shape {
			appearance Appearance {
				material IS mat
			}
			geometry IndexedFaceSet { 
				coord Coordinate {
					point [ 0.000 0 -1.000, -0.951 0 -0.309, -0.588 0  0.809,
						  0.588 0  0.809,  0.951 0 -0.309]
				}
				coordIndex [ 0, 1, 2, 3, 4, 0, -1 ]
				solid FALSE
			}
		}
	]
}}

# End of Prototye CapProto
##################################################


Transform { rotation 0.243 1 0.1 0.8 	# rotate entire scene for better view
	children [


##################################################
# Begin of Coordinate System

# begin of axis switch
DEF AXISCHOICE Switch { whichChoice 0 choice [ Group { children [

# begin of x-axis
Transform {		# x cylinder
	rotation 0 0 1 1.57
	children [
		Shape {
			appearance DEF RED Appearance {
				material Material { diffuseColor 1 0 0 }
			}
			geometry DEF AXIS Cylinder {radius 0.04 height 3}
		}
	]
}
Transform {		# x cone
      rotation 0 0 1 -1.57
      translation 1.4 0 0
	children [
		Shape {
			geometry DEF ENDCONE Cone { bottomRadius 0.2 height 0.5 }
			appearance USE RED
		}
	]
}
Transform {		# x label
	translation 1.85 -0.18 0 
	children [
		Shape {
			geometry Text {
				string ["X"]
				fontStyle DEF STYLEL FontStyle {
					style "BOLD"
					size 0.6
					justify "MIDDLE"
				}
			}
			appearance DEF BLACK Appearance {
				material Material {diffuseColor 0 0 0}
			}
		}
	]
}
# end of x-axis

# begin of y-axis
Shape {		# y cylinder
	appearance DEF FGREEN Appearance {
		material Material { diffuseColor 0.13 0.65 0.13 }
	}
	geometry USE AXIS
}
Transform {		# y cone
	translation 0 1.4 0
	children [
		Shape {
			geometry USE ENDCONE
			appearance USE FGREEN
		}
	]
}
Transform {		# y label
	translation 0 1.7 0 
	children [
		Shape {
			geometry Text {
				string ["Y"]
				fontStyle USE STYLEL
			}
			appearance USE BLACK
		}
	]
}
# end of y-axis

# begin of z-axis
Transform {		# z cylinder
	rotation 1 0 0 1.57
	children [
		Shape {
			appearance DEF BLUE Appearance {
				material Material {diffuseColor 0 0 1}
			}
			geometry USE AXIS
		}
	]
}
Transform {		# z cone
	rotation 1 0 0 1.57
	translation 0 0 1.4
	children [
		Shape {
			geometry USE ENDCONE
			appearance USE BLUE
		}
	]
}
Transform {		# z label
	translation 0 -0.18 1.85
	rotation 0 1 0 -1.57 
	children [
		Shape {
			geometry Text {
				string ["Z"]
				fontStyle USE STYLEL 
			}
			appearance USE BLACK
		}
	]
}
# end of z-axis

]}]}
# end of axis switch

# End of Coordinate System
##################################################


##################################################
# Begin of Extrusion

DEF EXTRCHOICE Switch { whichChoice -1 choice [		# begin of extrusion switch


Shape {				# unscaled extrusion, no caps 	- choice 0
					# start for transparency animation
	appearance Appearance {
		material DEF TRANS1 Material {diffuseColor 1 0 0 transparency 1}
	}
	geometry Extrusion {
		beginCap FALSE
		endCap FALSE
		solid FALSE
		crossSection [  0.000 -1.000, -0.951 -0.309, -0.588  0.809,
				    0.588  0.809,  0.951 -0.309,  0.000 -1.000 ]
		spine [ -5.0  3.0  0.0, -4.0  3.0  0.0, -1.1  3.0  0.0,
			   1.1  4.9  0.0,  4.0  4.9  0.0,  5.0  4.9  0.0 ]
	}
}

Shape {				# unscaled extrusion, no caps 	- choice 1
					# start for scale animation
	appearance Appearance { material USE TRANS1 }
	geometry DEF EXPAND Extrusion {
		beginCap FALSE
		endCap FALSE
		solid FALSE
		crossSection [  0.000 -1.000, -0.951 -0.309, -0.588  0.809,
				    0.588  0.809,  0.951 -0.309,  0.000 -1.000 ]
		spine [ -5.0  3.0  0.0, -4.0  3.0  0.0, -1.1  3.0  0.0,
			   1.1  4.9  0.0,  4.0  4.9  0.0,  5.0  4.9  0.0 ]
		scale [ 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.0 1.0 ]
	}
}

Shape {				# scaled extrusion, no caps 		- choice 2
					# used in cap animation
	appearance Appearance {material USE TRANS1}
	geometry Extrusion {
		beginCap FALSE
		endCap FALSE
		solid FALSE
		crossSection [  0.000 -1.000, -0.951 -0.309, -0.588  0.809,
				    0.588  0.809,  0.951 -0.309,  0.000 -1.000 ]
		spine [ -5.0  3.0  0.0, -4.0  3.0  0.0, -1.1  3.0  0.0,
			   1.1  4.9  0.0,  4.0  4.9  0.0,  5.0  4.9  0.0 ]
		scale[ 1.5 1.5, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.5 1.5 ]
	}
}

DEF FINAL Transform {		# Final Product				- choice 3
	children [ Shape {
		appearance Appearance {
			material Material {diffuseColor 1 0 0 transparency 0}
		}
		geometry Extrusion {
			beginCap TRUE
			endCap TRUE
			solid TRUE
			crossSection [  0.000 -1.000, -0.951 -0.309, -0.588  0.809,
					    0.588  0.809,  0.951 -0.309,  0.000 -1.000 ]
			spine [ -5.0  3.0  0.0, -4.0  3.0  0.0, -1.1  3.0  0.0,
				   1.1  4.9  0.0,  4.0  4.9  0.0,  5.0  4.9  0.0 ]
			scale [ 1.5 1.5, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.0 1.0, 1.5 1.5 ]
		}
	}]
}

]}	# end of extrusion switch

# End of Extrusion
##################################################


##################################################
# Begin of Cross Section Geometry

DEF CROSSANIM Switch { whichChoice -1 choice [		# animated cross section switch
	DEF SECTION Transform { children [CrossSectionProto { }]}
]}

DEF CROSSCHOICE Switch { whichChoice -1 choice [	# static cross section switch
	Transform { children [CrossSectionProto { }]}
]}

# End of Cross Section Geometry
##################################################


##################################################
# Begin of Spine Geometry

DEF SPINEANIM Switch { whichChoice -1 choice [		# animated spine switch
	DEF SPINE Transform { children [ SpineProto { } ]}
]}

DEF SPINECHOICE Switch { whichChoice -1 choice [	# static spine switch
	Transform { children [ SpineProto { } ]}
]}

# End of Spine Geometry
##################################################


##################################################
# Begin of Section Placement

DEF PLACEANIM Switch { whichChoice -1 choice [		# animated placement switch
	Group { children [

		DEF PL0 Transform { children [ CrossSectionProto { } ]}
		DEF PL1 Transform { children [ CrossSectionProto { } ]}
		DEF PL2 Transform { children [ CrossSectionProto { } ]}
		DEF PL3 Transform { children [ CrossSectionProto { } ]}
		DEF PL4 Transform { children [ CrossSectionProto { } ]}
		DEF PL5 Transform { children [ CrossSectionProto { } ]}
	]}
]} # end of animated placement switch

DEF PLACECHOICE Switch { whichChoice -1 choice [	# static placement switch

	# begin unscaled placement  (choice 0)
	Group { children [
		CrossSectionProto {			# section at spine vertex 0
			ori 0 0 1 1.57  pos -5.0  3.0  0.0
		}
		DEF FIXED Group { children [	# group vertices 1 to 4

			CrossSectionProto {		# section at spine vertex 1
      			ori 0 0 1 1.57  pos -4.0  3.0  0.0
			}
			CrossSectionProto {		# section at spine vertex 2
      			ori 0 0 1 1.927  pos -1.1  3.0  0.0
			}
			CrossSectionProto {		# section at spine vertex 3
      			ori 0 0 1 1.927  pos  1.1  4.9  0.0
			}
			CrossSectionProto {		# section at spine vertex 4
      			ori 0 0 1 1.57  pos  4.0  4.9  0.0
			}
		]}					# end of group vertices 1 to 4
		CrossSectionProto {			# section at spine vertex 5
      		ori 0 0 1 1.57  pos  5.0   4.9   0.0
		}
	]}
	# end unscaled placement  (choice 0)


	# begin scaled placement  (choice 1)
	Group { children [
		CrossSectionProto {			# original section at vertex 0
			ori 0 0 1 1.57  pos -5.0 3.0 0.0
		}

		CrossSectionProto {			# scaled section at vertex 0
			scl 1.5 1.5 1.5
			ori 0 0 1 1.57  pos -5.0 3.0 0.0
      		ballrad 0.04667
			ballcol 1 0 1
			linecol Color {color [1 0 1]}
		}

		USE FIXED					# sections at spine vertices 1 to 4

		CrossSectionProto {			# original section at vertex 5
			ori 0 0 1 1.57  pos 5.0 4.9 0.0
		}

		CrossSectionProto {			# scaled section at vertex 5
			scl 1.5 1.5 1.5
			ori 0 0 1 1.57  pos 5.0 4.9 0.0
      		ballrad 0.04667
			ballcol 1 0 1
			linecol Color {color [1 0 1]}
		}
	]}
	# end scaled placement (choice 1)

]} # end of static placement switch

# End of Section Placement
##################################################


##################################################
# Begin of Cap Geometry

DEF LRCAPANIM Switch { whichChoice -1 choice [ Group { children [		# cap switch

DEF LCAP Transform { children [ CapProto {	# left cap
	pos -8.0 3.0 0.0
	mat DEF TLCAP Material {
		diffuseColor 1 0 0
		transparency 0
	}
}]}

DEF RCAP Transform { children [ CapProto {	# right cap
	pos  30.0 4.9 0.0
	mat DEF TRCAP Material {
		diffuseColor 1 0 0
		transparency 0
	}
}]}

]}]} # end of cap switch

# End of Cap Geometry
##################################################


]}	# end: rotate entire scene for better view


##################################################
# Begin of Floating Panel

# ProximitySensor to measure the viewer's position and orientation
DEF PANELPROX ProximitySensor {size 100 100 100}

# Transform to follow the viewer and make the panel appears to be static
DEF PANELTRANS Transform { children [

# begin of control touch sensor

   Transform {
      translation -0.8 1.7 -5
      children [
         DEF NEXT TouchSensor { }	# main touch sensor
#
	   Shape { 			# yellow triangle
            appearance Appearance {material Material {diffuseColor 1 0.72 0.06}}
            geometry IndexedFaceSet {
               coord Coordinate {point [ -0.2 -0.2 0,
							0.2    0 0,
						     -0.2  0.2 0]}
               coordIndex [ 0, 1, 2, -1 ]
            }
	   }
         Shape {			# black triangle
            appearance USE BLACK
            geometry IndexedFaceSet {
               coord Coordinate {point [ -0.24 -0.255 -0.005,
							0.27  0     -0.005,
						     -0.24  0.255 -0.005]}
               coordIndex [ 0, 1, 2, -1 ]
            }
	   }			
#
         Transform { 		# begin of text
            translation -0.35 -0.1 0 
		children [ DEF MAINSW Switch {	# begin of main switch
               whichChoice 0
               choice [

                  Shape {		# choice 0
                     geometry Text {
                        string ["Start"]
                        fontStyle DEF STYLE FontStyle {
                           style "BOLD"
                           size 0.35
                           justify "END"
                        }
                     }
                     appearance USE BLACK
                  }

                  Shape {		# choice 1
                     geometry Text { string ["Cross Section"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 2
                     geometry Text { string ["Spine"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 3
                     geometry Text { string ["Placement"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 4
                     geometry Text { string ["Extrusion"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 5
                     geometry Text { string ["Scale both ends"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 6
                     geometry Text { string ["Caps"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }

                  Shape {		# choice 7
                     geometry Text { string ["Final Product"] fontStyle USE STYLE}
                     appearance USE BLACK
                  }
               ]
            }]			# end of main switch
         }		# end of text

      ]
   }

# end of control touch sensor


# begin of slider switch

   DEF SLIDERSW Switch { whichChoice -1 choice [ Group { children [

	Transform {		# begin of slider track
	   translation 1.2 -1.8 -5
	   children [
		Shape {
	         appearance USE BLUE
               geometry IndexedFaceSet {
                  coord Coordinate {point [
				-0.2 -0.02 0,  1.2 -0.02 0,
				 1.2  0.02 0, -0.2  0.02 0 ]
			}
                  coordIndex [ 0, 1, 2, 3, -1 ]
               }
		}
	   ]
	}			# end of slider track
#
      Transform {		# begin of slider plane sensor
         translation 1.2 -1.8 -5
         children [
            DEF PSSLIDER PlaneSensor {
               minPosition 0 0
               maxPosition 1 0
            }
	      DEF SLIDER Transform {
               children [ Shape {
                  appearance Appearance {material Material {diffuseColor 1 0.72 0.06}}
                  geometry Box {size 0.15 0.15 0.15 }
               }]
            }
         ]
      }			# end of slider plane sensor

   ]}]}

# end of slider switch

]}

# End of Floating Panel
##################################################


##################################################
# Begin of Interpolators and Timers

# Cross section animation
DEF CROSSPI PositionInterpolator {
	key      [ 0.0 1.0 ]
	keyValue [ -7.75 6.2 8.1, 0 0 0 ]
}
DEF CROSSOI OrientationInterpolator {
      key      [ 0.0 1.0 ]
      keyValue [ 0 0 1 1.57, 0 1 0 0]
}
DEF TIMER2 TimeSensor {
	loop 	FALSE
      enabled FALSE
	cycleInterval 2
}

# Spine animation
DEF SPINEPI PositionInterpolator {
	key      [ 0.0 1.0 ]
	keyValue [ 0 0 7, 0 0 0 ]
}
DEF SPINEOI OrientationInterpolator {
      key      [ 0.0 0.5 1.0 ]
      keyValue [ 0 1 0 6.1, 0 1 0 3.1, 0 1 0 0]
}
DEF TIMER3 TimeSensor {
	loop 	FALSE
      enabled FALSE
	cycleInterval 1.8
}

# Placement animation
DEF PL0PI PositionInterpolator {
	key      [ 0  0.28  1 ]
	keyValue [ 0 0 0 , -5.0 3.0 0.0 , -5.0 3.0 0.0 ]
}
DEF PL0OI OrientationInterpolator {
      key      [ 0  0.28  1 ]
      keyValue [ 0 1 0 0, 0 0 1 1.57 , 0 0 1 1.57 ]
}
DEF PL1PI PositionInterpolator {
	key      [ 0  0.14  0.42  1 ]
	keyValue [ 0 0 0, 0 0 0 , -4.0 3.0 0.0 , -4.0 3.0 0.0 ]
}
DEF PL1OI OrientationInterpolator {
      key      [ 0  0.14  0.42  1 ]
      keyValue [ 0 1 0 0, 0 1 0 0, 0 0 1 1.57, 0 0 1 1.57 ]
}
DEF PL2PI PositionInterpolator {
	key      [ 0  0.28  0.56  1 ]
	keyValue [ 0 0 0, 0 0 0, -1.1 3.0 0.0, -1.1 3.0 0.0 ]
}
DEF PL2OI OrientationInterpolator {
      key      [ 0  0.28  0.56  1 ]
      keyValue [ 0 1 0 0, 0 1 0 0, 0 0 1 1.927, 0 0 1 1.927 ]
}
DEF PL3PI PositionInterpolator {
	key      [ 0  0.42  0.70  1 ]
	keyValue [ 0 0 0, 0 0 0, 1.1 4.9 0.0, 1.1 4.9 0.0 ]
}
DEF PL3OI OrientationInterpolator {
      key      [ 0  0.42  0.70  1 ]
      keyValue [ 0 1 0 0, 0 1 0 0, 0 0 1 1.927, 0 0 1 1.927 ]
}
DEF PL4PI PositionInterpolator {
	key      [ 0  0.56  0.84 1 ]
	keyValue [ 0 0 0, 0 0 0, 4.0 4.9 0.0, 4.0 4.9 0.0 ]
}
DEF PL4OI OrientationInterpolator {
      key      [ 0  0.56  0.84 1 ]
      keyValue [ 0 1 0 0, 0 1 0 0, 0 0 1 1.57, 0 0 1 1.57 ]
}
DEF PL5PI PositionInterpolator {
	key      [ 0  0.70  1 ]
	keyValue [ 0 0 0, 0 0 0, 5.0 4.9 0.0 ]
}
DEF PL5OI OrientationInterpolator {
      key      [ 0  0.70  1 ]
      keyValue [ 0 1 0 0, 0 1 0 0, 0 0 1 1.57 ]
}
DEF TIMER4 TimeSensor {
	loop 	FALSE
      enabled FALSE
	cycleInterval 3
}

# Transparency animation
DEF PISLIDE PositionInterpolator {
	key      [ 0 0.3 0.6 0.9 1 ]
	keyValue [ 1 0 0, 0.9 0 0, 0.8 0 0, 0.5 0 0, 0 0 0 ]
}
DEF TIMER1 TimeSensor {
      loop FALSE
      enabled FALSE
	cycleInterval 1
}

# Scale animation
DEF ANSCALE ScalarInterpolator {
	key      [0 1]
      keyValue [1.0, 1.5]
}
DEF TIMER6 TimeSensor {
      loop  FALSE
      enabled FALSE
      cycleInterval 1
}

# Cap animation
DEF LCAPTRANS PositionInterpolator {
	key      [ 0.0, 1.0 ]
	keyValue [ 0 0 0, 3 0 0 ]
}
DEF RCAPTRANS PositionInterpolator {
	key      [ 0.0, 1.0 ]
	keyValue [ 0 0 0, -25 0 0 ]
}
DEF TIMER7 TimeSensor {
      loop FALSE
      enabled FALSE
	cycleInterval 0.7
}

# Rotate Final Product
DEF FINALOI OrientationInterpolator {
      key      [ 0.0 0.333 0.666 1.0 ]
      keyValue [ 0 1 0 0.0, 0 1 0 -2.094, 0 1 0 -4.189, 0 1 0 0.0]
}
DEF TIMER5 TimeSensor {
	loop 	TRUE
      enabled FALSE
	cycleInterval 10
}

# End of Interpolators and Timers
##################################################


##################################################
# VRML Script CONTROL to set switches in response to main touch sensor

DEF CONTROL Script {
   eventIn  SFTime  switchTime
   eventOut SFInt32 mchoice
   eventOut SFInt32 cochoice
   eventOut SFInt32 cranim
   eventOut SFInt32 crchoice
   eventOut SFInt32 spanim
   eventOut SFInt32 spchoice
   eventOut SFInt32 planim
   eventOut SFInt32 plchoice
   eventOut SFInt32 slchoice
   eventOut SFInt32 capchoice
   eventOut SFInt32 extchoice
   eventOut SFBool  t1sw
   eventOut SFBool  t2sw
   eventOut SFBool  t3sw
   eventOut SFBool  t4sw
   eventOut SFBool  t5sw
   eventOut SFBool  t6sw
   eventOut SFBool  t7sw
   field    SFInt32 counter 0

   url "vrmlscript:

      function initialize ( ) {
         mchoice   =  0;
         cochoice  =  0;
         cranim    = -1;
         crchoice  = -1;
         spanim    = -1;
         spchoice  = -1;
         planim    = -1;
         plchoice  = -1;
         slchoice  = -1;
         capchoice = -1;
         extchoice = -1;
         t1sw      = FALSE;
         t2sw      = FALSE;
         t3sw      = FALSE;
         t4sw      = FALSE;
         t5sw      = FALSE;
         t6sw      = FALSE;
         t7sw      = FALSE;
      }

      function switchTime (value,time) {
         cochoice  =  0;
         cranim    = -1;
         crchoice  = -1;
         spanim    = -1;
         spchoice  = -1;
         planim    = -1;
         plchoice  = -1;
         slchoice  = -1;
         capchoice = -1;
         extchoice = -1;
         t1sw      = FALSE;
         t2sw      = FALSE;
         t3sw      = FALSE;
         t4sw      = FALSE;
         t5sw      = FALSE;
         t6sw      = FALSE;
         t7sw      = FALSE;

         if (counter == 7) counter = 0;
         else counter++;

         if (counter == 1) cranim    = 0,
				   t2sw      = TRUE;

         if (counter == 2) spanim    = 0,
                           t3sw      = TRUE;

         if (counter == 3) planim    = 0,
                           t4sw      = TRUE;

         if (counter == 4) plchoice  = 0,
                           t1sw      = TRUE;

         if (counter == 5) plchoice  = 1,
                           t6sw      = TRUE;

         if (counter == 6) plchoice  = 1,
                           capchoice = 0,
                           t7sw      = TRUE;

         if (counter >= 2) crchoice = 0;
         if (counter >= 3) spchoice = 0;
         if (counter >= 4) slchoice = 0,
                           extchoice = counter - 4;

         if (counter == 7) cochoice  = -1,
                           crchoice  = -1,
                           spchoice  = -1,
                           slchoice  = -1,
                           t5sw      = TRUE;

         mchoice = counter;
       }
   "
}

# End of VRML Script CONTROL
##################################################


##################################################
# VRML Script GETX to set tranparency = translation.x

DEF GETX Script {
   eventIn  SFVec3f  set_transValue
   eventOut SFFloat  transparency_changed

   url "vrmlscript:

      function set_transValue (value, time){
		transparency_changed = value.x;
	}
   "
}
# End of VRML Script GETX
##################################################


##################################################
# VRML Script SETSCALE to scale elements in scale field of Extrusion node 

DEF SETSCALE Script {
   eventIn  SFFloat  scale_factor
   eventOut MFVec2f  scale_array

   url "vrmlscript:

	function initialize ( ) {
		scale_array = new MFVec2f ();
		for (i = 0; i <= 5; i++) {
		   scale_array [i] = new SFVec2f (1, 1);
		}
	}

	function scale_factor(value) {
		scale_array [0] = new SFVec2f (value, value);
		scale_array [5] = new SFVec2f (value, value);
	}

   "
}
# End of VRML Script SETSCALE
##################################################


##################################################
# Begin of Routing Statements


# Routing for floating panel
ROUTE PANELPROX.position_changed TO PANELTRANS.translation
ROUTE PANELPROX.orientation_changed TO PANELTRANS.rotation


# Routing for touch senor control (main switch)
ROUTE NEXT.touchTime    TO CONTROL.switchTime
ROUTE CONTROL.mchoice   TO MAINSW.whichChoice
ROUTE CONTROL.cochoice  TO AXISCHOICE.whichChoice
ROUTE CONTROL.cranim    TO CROSSANIM.whichChoice
ROUTE CONTROL.crchoice  TO CROSSCHOICE.whichChoice
ROUTE CONTROL.spanim    TO SPINEANIM.whichChoice
ROUTE CONTROL.spchoice  TO SPINECHOICE.whichChoice
ROUTE CONTROL.planim    TO PLACEANIM.whichChoice
ROUTE CONTROL.plchoice  TO PLACECHOICE.whichChoice
ROUTE CONTROL.slchoice  TO SLIDERSW.whichChoice
ROUTE CONTROL.capchoice TO LRCAPANIM.whichChoice
ROUTE CONTROL.extchoice TO EXTRCHOICE.whichChoice


# Routing for cross section animation
ROUTE CONTROL.t2sw      TO TIMER2.enabled
ROUTE NEXT.touchTime    TO TIMER2.startTime
ROUTE TIMER2.fraction_changed TO CROSSPI.set_fraction
ROUTE TIMER2.fraction_changed TO CROSSOI.set_fraction
ROUTE CROSSPI.value_changed   TO SECTION.translation
ROUTE CROSSOI.value_changed   TO SECTION.rotation


# Routing for spine animation
ROUTE CONTROL.t3sw      TO TIMER3.enabled
ROUTE NEXT.touchTime    TO TIMER3.startTime
ROUTE TIMER3.fraction_changed TO SPINEPI.set_fraction
ROUTE TIMER3.fraction_changed TO SPINEOI.set_fraction
ROUTE SPINEPI.value_changed   TO SPINE.translation
ROUTE SPINEOI.value_changed   TO SPINE.rotation


# Routing for placement animation
ROUTE CONTROL.t4sw      TO TIMER4.enabled
ROUTE NEXT.touchTime    TO TIMER4.startTime
ROUTE TIMER4.fraction_changed TO PL0PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL0OI.set_fraction
ROUTE PL0PI.value_changed     TO PL0.translation
ROUTE PL0OI.value_changed     TO PL0.rotation

ROUTE TIMER4.fraction_changed TO PL1PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL1OI.set_fraction
ROUTE PL1PI.value_changed TO PL1.translation
ROUTE PL1OI.value_changed TO PL1.rotation

ROUTE TIMER4.fraction_changed TO PL2PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL2OI.set_fraction
ROUTE PL2PI.value_changed TO PL2.translation
ROUTE PL2OI.value_changed TO PL2.rotation

ROUTE TIMER4.fraction_changed TO PL3PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL3OI.set_fraction
ROUTE PL3PI.value_changed TO PL3.translation
ROUTE PL3OI.value_changed TO PL3.rotation

ROUTE TIMER4.fraction_changed TO PL4PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL4OI.set_fraction
ROUTE PL4PI.value_changed TO PL4.translation
ROUTE PL4OI.value_changed TO PL4.rotation

ROUTE TIMER4.fraction_changed TO PL5PI.set_fraction
ROUTE TIMER4.fraction_changed TO PL5OI.set_fraction
ROUTE PL5PI.value_changed TO PL5.translation
ROUTE PL5OI.value_changed TO PL5.rotation


# Routing for transparency animation and slider
ROUTE CONTROL.t1sw      TO TIMER1.enabled
ROUTE NEXT.touchTime    TO TIMER1.startTime
ROUTE TIMER1.fraction_changed      TO PISLIDE.set_fraction
ROUTE PISLIDE.value_changed        TO SLIDER.translation
ROUTE PSSLIDER.translation_changed TO SLIDER.translation
ROUTE SLIDER.translation           TO PSSLIDER.offset
ROUTE SLIDER.translation           TO GETX.set_transValue
ROUTE GETX.transparency_changed    TO TRANS1.transparency


# Routing for scale animation
ROUTE CONTROL.t6sw      TO TIMER6.enabled
ROUTE NEXT.touchTime    TO TIMER6.startTime
ROUTE TIMER6.fraction_changed TO ANSCALE.set_fraction
ROUTE ANSCALE.value_changed   TO SETSCALE.scale_factor
ROUTE SETSCALE.scale_array    TO EXPAND.set_scale


# Routing for cap animation
ROUTE CONTROL.t7sw      TO TIMER7.enabled
ROUTE NEXT.touchTime    TO TIMER7.startTime
ROUTE TIMER7.fraction_changed TO LCAPTRANS.set_fraction
ROUTE TIMER7.fraction_changed TO RCAPTRANS.set_fraction
ROUTE LCAPTRANS.value_changed TO LCAP.translation
ROUTE RCAPTRANS.value_changed TO RCAP.translation
ROUTE TRANS1.transparency     TO TLCAP.transparency
ROUTE TRANS1.transparency     TO TRCAP.transparency


# Routing to rotate Final Product
ROUTE CONTROL.t5sw      TO TIMER5.enabled
ROUTE NEXT.touchTime    TO TIMER5.startTime
ROUTE TIMER5.fraction_changed TO FINALOI.set_fraction
ROUTE FINALOI.value_changed   TO FINAL.rotation


# End of Routing Statements
##################################################
