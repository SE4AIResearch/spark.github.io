#VRML V2.0 utf8

	#VRML V2.0 utf8

# This is a VERY simple example of a proximity sensor using an orientation interpolator.

Viewpoint { 

  fieldOfView    0.785398 
  jump           TRUE     
  orientation    0 0 1 0   
  position       0 0 50       
  description    "The sun..."        
}

Viewpoint { 

  fieldOfView    0.785398  
  jump           TRUE        
  orientation    -0.91 0.23 -0.35 0.55   
  position       -17.01 19.85 46.92   
  description    "...in the sky..."        
}

Viewpoint { 

  fieldOfView    0.785398     
  jump           TRUE          
  orientation    -0.02 0.82 0.57 4.12   
  position       -16.46 15.64 -0.07   
  description    "Sun View Top"       
}



# Here's the creation of the sun.

DEF SUN Transform {           # <-- We call this transform SUN, for use of the interpolator
   children [
      Shape {
         geometry Sphere { radius 5 }
         appearance Appearance {
            material Material {
               diffuseColor 1.0000 1.0000 0.0000
               specularColor 1 1 1
               shininess 1
            }
         }
      }
   DEF RAY Transform {			# Here's the creation of one ray
      translation 0 7 0
      children Shape {
         geometry Cone { bottomRadius 1.5 height 5 }
         appearance Appearance {
            material Material {
               diffuseColor 1.0000 0.6471 0.0000
               specularColor 1 1 0
               shininess 1
            }
         }
      }
   }  

				# These are instances of the rest of the rays, going around the sphere
   Transform {
      rotation 0 0 1 0.785
      children USE RAY
   }

   Transform {
      rotation 0 0 1 1.57
      children USE RAY
   }

   Transform {
      rotation 0 0 1 2.355
      children USE RAY
   }

   Transform {
      rotation 0 0 1 3.140
      children USE RAY
   }

   Transform {
      rotation 0 0 1 3.925
      children USE RAY
   }

   Transform {
      rotation 0 0 1 4.710
      children USE RAY
   }

   Transform {
      rotation 0 0 1 5.495
      children USE RAY
   }

   ]
}

DEF PS_SUN ProximitySensor {size 45 45 45}

DEF SUN_TURN OrientationInterpolator {
  key [0, .25, .5, .75, 1.0]
  keyValue [ 0 0 1 0.00, 0 0 1 1.57,
             0 0 1 3.14, 0 0 1 4.71,
             0 0 1 0.00
           ]
}

DEF SUN_TIME TimeSensor { 
  loop TRUE
  enabled FALSE
  cycleInterval 18
}

ROUTE PS_SUN.isActive               TO SUN_TIME.set_enabled
ROUTE SUN_TIME.fraction_changed TO SUN_TURN.set_fraction 
ROUTE SUN_TURN.value_changed      TO SUN.set_rotation                            

# That's it!  Simple.